# app.py

import streamlit as st
import pandas as pd
from excel_processor_app_en import process_excel  # –ò–º–ø–æ—Ä—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

st.set_page_config(page_title="Excel Processor", layout="wide")

st.title("üèó Excel-—Ñ–∏–ª—å—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")

st.write("""
### –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"
3. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
   - –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ OVACLS (–æ—Å—Ç–∞–≤–∏—Ç —Ç–æ–ª—å–∫–æ 201-212, 234, 295)
   - –†–∞—Å—Å—á–∏—Ç–∞–µ—Ç SCORE –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
   - –°–≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ OVACLS –∏ NEIGHBORHOOD
   - –û—Å—Ç–∞–≤–∏—Ç —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–∏, –∑–Ω–∞—á–µ–Ω–∏–µ SCORE –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤ –≥—Ä—É–ø–ø–µ
   - –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ OVACLS –∏ NEIGHBORHOOD
4. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel
""")

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
col1, col2 = st.columns([2, 1])

with col1:
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])

with col2:
    if uploaded_file:
        if st.button("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", use_container_width=True):
            try:
                with st.spinner('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...'):
                    result_df = process_excel(uploaded_file)
                
                if len(result_df) > 0:
                    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                    groups_stats = result_df.groupby('OVACLS').agg(
                        –ó–∞–ø–∏—Å–µ–π=('SCORE', 'count')
                    ).reset_index()
                    
                    st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(result_df)} –∑–∞–ø–∏—Å–µ–π —Å –æ—Ü–µ–Ω–∫–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π –≤ –∏—Ö –≥—Ä—É–ø–ø–∞—Ö")
                    
                    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
                    tab1, tab2, tab3 = st.tabs(["–†–µ–∑—É–ª—å—Ç–∞—Ç—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥"])
                    
                    with tab1:
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                        st.subheader("–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏")
                        st.dataframe(result_df)
                        
                        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                        @st.cache_data
                        def convert_df_to_excel(df):
                            from io import BytesIO
                            output = BytesIO()
                            with pd.ExcelWriter(output, engine='openpyxl') as writer:
                                df.to_excel(writer, index=False)
                            return output.getvalue()

                        excel_bytes = convert_df_to_excel(result_df)

                        st.download_button(
                            label="üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Excel",
                            data=excel_bytes,
                            file_name="filtered_results.xlsx",
                            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        )
                    
                    with tab2:
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≥—Ä—É–ø–ø–∞–º
                        st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º OVACLS")
                        st.dataframe(groups_stats)
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≥—Ä—É–ø–ø–∞–º
                        st.subheader("–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º")
                        detailed_stats = result_df.groupby(['OVACLS', 'NEIGHBORHOOD']).agg(
                            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ=('SCORE', 'count'),
                            –°—Ä–µ–¥–Ω–µ–µ_SCORE=('SCORE', 'mean'),
                            –ú–∏–Ω_SCORE=('SCORE', 'min'),
                            –ú–∞–∫—Å_SCORE=('SCORE', 'max')
                        ).reset_index()
                        st.dataframe(detailed_stats)
                    
                    with tab3:
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        st.subheader("–ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
                        if 'process_log' in st.session_state:
                            st.text_area("–õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", st.session_state['process_log'], height=600)
                        else:
                            st.info("–õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                else:
                    st.warning("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –ø—Ä–∏—á–∏–Ω—É
                    if 'process_log' in st.session_state:
                        st.subheader("–ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
                        st.text_area("–õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", st.session_state['process_log'], height=400)
                    
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                if 'process_log' in st.session_state:
                    st.subheader("–õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏)")
                    st.text_area("–õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", st.session_state['process_log'], height=400)

# –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–Ω–∏–∑—É
if uploaded_file and 'df' not in st.session_state:
    try:
        # –ü—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        df = pd.read_excel(uploaded_file)
        st.session_state['df'] = df
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

if 'df' in st.session_state:
    with st.expander("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"):
        st.dataframe(st.session_state['df'].head(1000))  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏